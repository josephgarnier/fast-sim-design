# Copyright 2019-present, Joseph Garnier
# All rights reserved.
#
# This source code is licensed under the license found in the
# LICENSE file in the root directory of this source tree.
# =============================================================================
# What Is This?
# -------------
# In this file, you provide dependency information of your project for CMake
# based buildsystems for `find_package()` function. To know how to fill this
# file, please see cmake documentation of `find_package()`
# (https://cmake.org/cmake/help/latest/command/find_package.html),
# cmake-packages (https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html)
# and cmake-buildsystem (https://cmake.org/cmake/help/latest/manual/cmake-developer.7.html). But the file is already filled with a default content to be exported then imported in an other project with `target_link_libraries()`. If you are not familiar with these concepts of modern cmake, watch this tutorial: https://gitlab.kitware.com/cmake/community/-/wikis/doc/tutorials/Exporting-and-Importing-Targets.
#
# You just need to fill the commented section in the same way as the example.

include(CMakeFindDependencyMacro)

@PACKAGE_INIT@

check_required_components(@PROJECT_NAME@)

# Declare here all requirements upstream dependencies. They must be the same as
# those declared in cmake/project/Dependencies.cmake.

# An example with Qt (delete it if you don't need it)
# if(DEFINED ENV{Qt5_DIR}) 
# 	set(Qt5_DIR "$ENV{Qt5_DIR}")
# else()
# 	set(Qt5_DIR "/opt/Qt/5.12.6/gcc_64/lib/cmake/Qt5")
# endif()
# find_dependency(Qt5 COMPONENTS Widgets Gui Core Svg Concurrent REQUIRED)

# End of declaration section

if(NOT TARGET @LOCAL_TARGET_NAME@)
	include("${CMAKE_CURRENT_LIST_DIR}/@LOCAL_EXPORT_TARGET_FILE_NAME@")
endif()
